Resources:
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      Name: ${self:custom.serviceNamePrefix}
      ArtifactStore:
        Location: !Sub oncoclinicas-serverless-artifacts-${sls:stage}
        Type: S3
      Stages:
        - Name: source-code-integration
          Actions:
            - InputArtifacts: []
              Name: source-code-integration
              ActionTypeId:
                Version: "1"
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: ${self:custom.serviceNamePrefix}-Input-Artifacts
              Configuration:
                ConnectionArn: ${self:custom.secrets.CODESTAR_CONNECTION_ARN}
                FullRepositoryId: ${self:custom.secrets.FULL_REPOSITORY_ID}
                BranchName: ${self:custom.secrets.BRANCH}
                OutputArtifactFormat: "CODE_ZIP"
        - Name: Build-API
          Actions:
            - Name: Serverless-API-Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: ${self:custom.serviceNamePrefix}-Input-Artifacts
              OutputArtifacts:
                - Name: ${self:custom.serviceNamePrefix}-Build-Output-Artifacts
              Configuration:
                ProjectName: !Ref ServerlessBuild

  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.serviceNamePrefix}-PipeLine-Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - Fn::Sub: arn:aws:s3:::oncoclinicas-serverless-artifacts-${sls:stage}
                  - Fn::Sub: arn:aws:s3:::oncoclinicas-serverless-artifacts-${sls:stage}/*
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"
        - PolicyName: CodeStarConnectionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                  - "codestar-connections:PassConnection"
                Resource: ${self:custom.secrets.CODESTAR_CONNECTION_ARN}
              - Effect: Allow
                Action:
                  - "iam:GetRole"
                  - "iam:PassRole"
                  - "iam:PutRolePolicy"
                Resource:
                  - Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/MainFunctionRole-${self:custom.serviceNamePrefix}"
