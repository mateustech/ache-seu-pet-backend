Resources:
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MainFunctionRole-${self:custom.serviceNamePrefix}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: MainFunctionPolicy-${self:custom.serviceNamePrefix}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateNetworkInterface"
                  - "ec2:AttachNetworkInterface"
                  - "ec2:DetachNetworkInterface"
                Resource:
                  - Fn::Sub: "arn:aws:ec2:*:${AWS::AccountId}:security-group/${self:custom.secrets.SECURITY_GROUP}"
                  - Fn::Sub: "arn:aws:ec2:*:${AWS::AccountId}:network-interface/*"
                  - Fn::Sub: "arn:aws:ec2:*:${AWS::AccountId}:subnet/${self:custom.secrets.SUBNET_1}"
                  - Fn::Sub: "arn:aws:ec2:*:${AWS::AccountId}:subnet/${self:custom.secrets.SUBNET_2}"
              - Effect: Allow
                Action:
                  - "ec2:DescribeNetworkInterfaces"
                  - "ec2:DeleteNetworkInterface"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ssm:GetParameter"
                Resource:
                  - ${self:custom.secrets.SECRET_ARN_REFERENCE}
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - ${self:custom.secrets.SECRET_ARN}
              - Effect: Allow
                Action:
                  - "execute-api:*"
                Resource:
                  - Fn::Sub: "arn:aws:execute-api:*:*:*/*/*/*"
              - Effect: Allow
                Action:
                  - "events:DescribeRule"
                  - "events:EventRule"
                  - "events:CreateEventBus"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:DescribeRepositories"
                  - "ecr:ListImages"
                  - "ecr:DescribeImages"
                Resource:
                  - Fn::Sub: arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${self:custom.serviceNamePrefix}
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "iam:GetRole"
                  - "iam:PassRole"
                  - "iam:PutRolePolicy"
                Resource:
                  - Fn::Sub: "arn:aws:iam::${AWS::AccountId}:role/MainFunctionRole-${self:custom.serviceNamePrefix}"
